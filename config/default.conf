server {
	listen *:80;
	listen [::]:80;
	server_name al-ygo.sytes.net;
	return 301 https://$server_name$request_uri;	

	root /usr/share/nginx/html;
	
	location /.well-known/acme-challenge/ {
		root /usr/share/nginx/html;
		try_files $uri =404;
	}
        # Add index.php to the list if you are using PHP
        index index.js index.ejs index.html index.htm index.nginx-debian.html;

        #server_name _;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                #root /home/ubuntu/web;
                try_files $uri $uri/ =404;
                #try_files $uri $uri/ /index.html;
        }


        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
		root   /usr/share/nginx/html;
	}

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
}
server {
	listen 443 ssl;
	server_name mywebsite.com;
	root /usr/share/nginx/html;	
	# SSL certificate configuration
	ssl_certificate /etc/letsencrypt/live/al-ygo.sytes.net/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/al-ygo.sytes.net/privkey.pem;
	
		
	# Other SSL configuration settings
	ssl_protocols TLSv1.2 TLSv1.3;

	location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                #root /home/ubuntu/web;
                try_files $uri $uri/ =404;
                #try_files $uri $uri/ /index.html;
        }


        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
                root   /usr/share/nginx/html;
        }

}
